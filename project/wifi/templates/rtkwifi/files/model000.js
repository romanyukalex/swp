function IptvCompareModel(mpzResponse,packKeys,subjectNames){function fromArrayByAttribute(array,attribute,value){var item;for(var i in array){item=array[i];if(item[attribute]==value){return item}}return null}function Pack(key){return{key:key,size:0}}function ChannelsInPack(packKey){return{packKey:packKey,channels:[]}}function Subject(key,name,packs){var channelsInPacks=[];$(packs).each(function(i,pack){channelsInPacks.push(new ChannelsInPack(pack.key))});return{key:key,name:name,channelsInPacks:channelsInPacks,channelsInPacksByFilter:function(packKeys){var filtred=[];$(channelsInPacks).each(function(i,сhannelsInPack){if($.inArray(сhannelsInPack.packKey,packKeys)!=-1){filtred.push(сhannelsInPack)}});return filtred},getChannelsByPackKey:function(packKey){return fromArrayByAttribute(channelsInPacks,"packKey",packKey).channels}}}function Channel(name,number,description,language){return{name:name,number:number,description:description,language:language}}var packs=[],subjects=[],channels=[];var packs=[],filteredPackKeys=[];$(packKeys).each(function(i,packKey){for(var j in mpzResponse.packets){var packData=mpzResponse.packets[j];if(packData.pkgId==packKey){packs.push(new Pack(packKey));filteredPackKeys.push(packKey);break}}});packKeys=filteredPackKeys;$inPacks=null;var subjects=[];$(subjectNames).each(function(i,subjectName){var subject=new Subject(i,subjectName,packs);for(var channelId in mpzResponse.channels){var channelData=mpzResponse.channels[channelId];if($.inArray(channelData.channelId,(mpzResponse.subjects[subjectName]||[]))!=-1){var channel=new Channel(channelData.name,channelData.channelId,channelData.description,channelData.language);var inPackKeys=channelData.packets;for(var field in inPackKeys){var packKey=inPackKeys[field];var index=$.inArray(packKey,packKeys);if(index!=-1){packs[index].size++;var channelsInPack=fromArrayByAttribute(subject.channelsInPacks,"packKey",packKey);channelsInPack.channels.push(channel)}}channels.push(channel)}}subjects.push(subject)});mpzResponse=null;function getNotSortedSubjectChannels(subjectKey,packKeys){var subject=fromArrayByAttribute(subjects,"key",subjectKey);var channelsInPacks=subject.channelsInPacksByFilter(packKeys);var uniqueChannels=[];$(channelsInPacks).each(function(){$(this.channels).each(function(){if($.inArray(this,uniqueChannels)==-1){uniqueChannels.push(this)}})});return uniqueChannels}var $channels=$(channels),$subjects=$(subjects);return{packs:packs,subjects:subjects,getSubjectChannelCount:function(subjectKey,packKeys){return getNotSortedSubjectChannels(subjectKey,packKeys).length},getSubjectChannels:function(subjectKey,packKeys){var uniqueChannels=getNotSortedSubjectChannels(subjectKey,packKeys);var sortedUniqueChannels=[];$channels.each(function(){if($.inArray(this,uniqueChannels)!=-1){sortedUniqueChannels.push(this)}});return sortedUniqueChannels},getChannelCount:function(packKeys){var uniqueChannels=[];$subjects.each(function(){$(this.channelsInPacks).each(function(){if($.inArray(this.packKey,packKeys)!=-1){$(this.channels).each(function(){if($.inArray(this,uniqueChannels)==-1){uniqueChannels.push(this)}})}})});return uniqueChannels.length},getChannelsByNamePart:function(partName){partName=partName.toLowerCase().trim();if(partName.length==0){return channels}var foundChannels=[];$channels.each(function(){if(this.name.toLowerCase().trim().indexOf(partName)!=-1&&$.inArray(this,foundChannels)==-1){foundChannels.push(this)}});return foundChannels},getCrossOfSubjectChannels:function(channels,subjectKey,packKeys){var uniqueChannels=getNotSortedSubjectChannels(subjectKey,packKeys),filtredChannels=[];for(var i in uniqueChannels){var channel=uniqueChannels[i];if($.inArray(channel,channels)!=-1){filtredChannels.push(channel)}}return filtredChannels},getSubjectByKey:function(key){return fromArrayByAttribute(subjects,"key",key)},getChannelByNumber:function(number){return fromArrayByAttribute(channels,"number",number)},getPackByKey:function(key){return fromArrayByAttribute(packs,"key",key)}}};